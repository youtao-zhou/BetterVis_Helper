{"./":{"url":"./","title":"Install BetterVis","keywords":"","body":"BetterVis Visualization Tutorial and Parameter Explanation Youtao Zhou, Zikai Lin, Hengrui Liang Welcome to BetterVis Install of BetterVis Before installing BetterVis, please check that your R version meets the requirements. We require R version 4.4 or higher and ggplot2 package version 3.5.0 or higher BetterVis has not been uploaded to CRAN yet. If users need to download BetterVis, they should install it via Github. Before this, installing devtools is mandatory. install.packages('devtools) devtools::install_github(\"youtao-zhou/BetterVis\") Some required packages, including jjPlot, linkET, ComplexHeatmap, ggsankey, and vegan, may not be installed automatically and could have dependency issues. Please use the following commands to install them devtools::install_github(\"junjunlab/jjPlot\") devtools::install_github(\"Hy4m/linkET\", force = TRUE) devtools::install_github(\"jokergoo/ComplexHeatmap\") devtools::install_github(\"davidsjoberg/ggsankey\") install.packages(\"vegan\") Copyright (c) 2025 zyt all right reserved，powered by GitbookLast revised on： 2025-08-04 03:02:56 "},"Chapter1 Some introductions to BetterVis.html":{"url":"Chapter1 Some introductions to BetterVis.html","title":"Chapter 1: An Introduction to BetterVis","keywords":"","body":"Some introductions to BetterVis BetterVis is designed to create beautiful graphics with elegant and concise code. It is especially suitable for medical researchers, helping to reduce the inefficient time they spend on plot beautification and to achieve publication-ready graphics for mainstream journals in the shortest possible time. Before using BetterVis, you should be aware of the following information: 1.1 Prerequisites You are a current or former R user, comfortable working in an editor like RStudio or VS Code. You have used ggplot2 to create plots before. Even if you aren't an expert, you understand its basic syntax and grammar. 1.2 How to Use This Guide This guide covers 29 functions and their corresponding examples, showcasing the results of advanced visualizations on the sample data included in the BetterVis package. Each chapter represents a fundamental plot type, such as boxplots, bar charts, etc., and provides a detailed explanation of its functions and the meaning of their parameters. If you are looking for a specific type of graphic, you don't need to read the entire guide. Using your browser's search function (Ctrl+F) is a great way to quickly locate the section you need. 1.3 The Core Philosophy of BetterVis Our authors have encapsulated the complex process of creating beautiful graphics into functions, exposing the necessary parameters for users to make adjustments. You can use a simplified function call for quick plotting, or alternatively, use more detailed parameters for fine-tuned control. In either case, it retains the advantage of producing advanced visualizations in a short amount of time. The brief example below will help you understand this better. Simple Example BetterVis_Heatmap_Mantel(phenotype_data, expression_data, spec_select=c(\"stage\", \"age\", \"gender\", \"CA125\", \"CEA\", \"CA15.3\")) Advanced Example BetterVis_Heatmap_Mantel(phenotype_data, expression_data, spec_select=c(\"stage\", \"age\", \"gender\", \"CA125\", \"CEA\", \"CA15.3\"), significant_symbol = TRUE, heatmap_color = brewer.pal(11, \"PuOr\"), line_size = c(0.5, 1, 2), line_color = color_pal(3), phenotype_text_size = 5)+ theme(legend.text = element_text(size=14),legend.title = element_text(size=16)) You can specify various parameters for fine-tuning. However, if you don't provide them, the function uses default values that have been carefully chosen through extensive testing to be suitable for most common scenarios. Copyright (c) 2025 zyt all right reserved，powered by GitbookLast revised on： 2025-08-04 16:32:12 "},"Chapter2 Color Choice.html":{"url":"Chapter2 Color Choice.html","title":"Chapter 2: Color Choice","keywords":"","body":"Chapter 2 How to choose colors in BetterVis Written at the beginning The BetterVis philosophy for color selection is based on simplicity and consistency. This is particularly suitable for researchers who do not want to spend excessive time on color coordination. To use these features, the BetterVis package must be loaded beforehand. library(BetterVis) Usage example Discrete And Unpaired color selection BetterVis_Color(type = \"discrete\", odd_or_even = \"even\", n = 10, style = \"Science\", option = 1) Discrete And paired color selection BetterVis_Color(type = \"discrete\", odd_or_even = \"even\", n = 9, style = \"Science\", option = 2,paired = TRUE, pair_num = 3) Continuous color extraction BetterVis_Color(type = \"discrete\", odd_or_even = \"even\", n = 9, style = \"Science\", option = 2,paired = TRUE, pair_num = 3) Each of them will return a vector of colors based on your specifications for an odd/even number of categories and whether a paired palette is required. For example: [1] \"#377eb8\" \"#4daf4a\" \"#377eb8\" \"#4daf4a\" \"#984ea3\" \"#ff7f00\" \"#377eb8\" \"#4daf4a\" \"#984ea3\" \"#ff7f00\" Parameter explanation type: The type of color scale. Accepts \"discrete\" for categorical data or \"continuous\" for numerical data. Default: NULL. odd_or_even: Specifies whether the total number of colors to be generated should be odd or even. Accepts \"odd\" or \"even\". Default: NULL. n: A numeric value specifying the total number of colors to retrieve. style: The color theme to use. Available options are \"Science\", \"Nature\", \"Cell\", and \"Lancet\". option: A numeric value (1, 2, or 3) specifying the color scheme variation within the selected style. paired: A logical value (TRUE or FALSE) indicating whether to generate colors for paired/grouped data. If TRUE, colors are repeated in groups (e.g., c(\"#984ea3\", \"#984ea3\", \"#ff7f00\", \"#ff7f00\")). pair_num: If paired = TRUE, this sets the number of items within each color group. For example, if n=6 and pair_num=3, the result would be three instances of the first color followed by three instances of the second. Default: 3. Copyright (c) 2025 zyt all right reserved，powered by GitbookLast revised on： 2025-07-31 00:24:26 "},"Chapter3 Boxplot.html":{"url":"Chapter3 Boxplot.html","title":"Chapter 3: Boxplots","keywords":"","body":"Chapter 3 Boxplot At the Beginning BetterVis package must be loaded beforehand. library(BetterVis) 3.1 BetterVis_Boxplot_Experiment In BetterVis_Boxplot_Experiment, we have streamlined the method for presenting multi-group boxplots and for visualizing significance comparisons across facets, allowing for rapid comparisons between multiple groups. 3.1.1 Data Input data(\"Boxplot_Experiment_example\", package = \"BetterVis\") 3.1.2 Simple Example BetterVis_Boxplot_Experiment( data=Boxplot_Experiment_example, x_var = \"supp\", y_var = \"len\", fill_var = \"dose\", use_facet = T, custom_colors = c(\"#FC5D5C\", \"#4B6A9D\", \"#167D7D\"), comparison_col = \"dose\", comparison = list(c(\"dose_1\",\"dose_2\"),c(\"dose_1\",\"dose_3\"),c(\"dose_2\",\"dose_3\")), ylim = c(0,40) ) 3.1.3 Advanced Example BetterVis_Boxplot_Experiment( data=Boxplot_Experiment_example, x_var = \"supp\", y_var = \"len\", fill_var = \"dose\", use_facet = T, title = \"\", x_label_angle = 45, x_label_bold = TRUE, y_label_bold = TRUE, axis_titles = c(\"X Axis\", \"Y Axis\"), axis_title_bold = TRUE, custom_colors = c(\"#FC5D5C\", \"#4B6A9D\", \"#167D7D\"), jitter = TRUE, jitter_color = c(\"#FC5D5C\", \"#4B6A9D\", \"#167D7D\"), jitter_width = 1,jitter_alpha = 1,jitter_size = 2, legend_show = F, legend_title = \"\", box_width = 0.6, comparison_col = \"dose\", comparison = list(c(\"dose_1\",\"dose_2\"),c(\"dose_1\",\"dose_3\"),c(\"dose_2\",\"dose_3\")), comparison_method = \"wilcox\", box_background = T,background_color = \"white\",background_border = T,sig_type = \"SYMBOL\",violin = F,ylim = c(0,40) )+theme()+guides() 3.1.4 We have modified the iris dataset to create these boxplots iris$Group 3.1.5 Parameter explanation data: The input dataset. x_var: The grouping variable for the x-axis (should be a factor). y_var: The numerical variable for the y-axis. fill_var: The variable used for the fill color (should be a factor). use_facet: A logical value (TRUE/FALSE) indicating whether to use faceting. Default: FALSE. title: The title of the plot. x_label_angle: A numeric value for the angle of the x-axis labels. x_label_bold: A logical value (TRUE/FALSE) to make x-axis labels bold. Default: FALSE. y_label_bold: A logical value (TRUE/FALSE) to make y-axis labels bold. Default: FALSE. axis_titles: A character vector of length 2 for the x and y axis titles respectively. Use \"\" for no title. axis_title_bold: A logical value (TRUE/FALSE) to make axis titles bold (effective only if axis_titles is set). Default: FALSE. custom_colors: A vector of colors for the boxplot fills. The length should match the number of levels in the fill_var factor (e.g., c(\"#FC5D5C\", \"#4B6A9D\", \"#167D7D\")). jitter: A logical value (TRUE/FALSE) indicating whether to display jittered points. Default: TRUE. jitter_color: A vector of colors for the jittered points. The length should match the number of factor levels. jitter_width: A numeric value for the width of the jitter. Default: 0.1. jitter_alpha: A numeric value for the transparency (alpha) of the jittered points. Default: 1. jitter_size: A numeric value for the size of the jittered points. Default: 1. legend_show: A logical value (TRUE/FALSE) indicating whether to display the legend. Default: TRUE. legend_title: The title of the legend. box_width: A numeric value for the width of the boxplots. Default: 0.75. comparison_col: A string specifying the name of the variable to use for comparisons. comparison: A list specifying the groups to compare (e.g., list(c(\"group1\", \"group2\"))). comparison_method: The statistical method for comparison. Accepts \"wilcox\" or \"t.test\". jitter_legend: A logical value (TRUE/FALSE) indicating whether to show the legend for the jittered points. Default: FALSE. fill_legend: A logical value (TRUE/FALSE) indicating whether to show the legend for the fill colors. Default: TRUE. background_color: The background color of the plot panel. Default: \"white\". background_border: A logical value (TRUE/FALSE) indicating whether to draw a border around the plot panel. Default: TRUE. sig_type: The type of significance marker to display. Accepts \"SYMBOL\" (for asterisks) or \"NUMBER\" (for p-values). Default: \"SYMBOL\". guides_modifications: Not user-adjustable. Used internally to interface with guide or theme functions for further customization. violin: A logical value (TRUE/FALSE) indicating whether to overlay a violin plot. Default: FALSE. ylim: Sets the y-axis limits (e.g., c(0, 100)). 3.2 BetterVis_Boxplot_MixViolin 3.2.1 Data Input data(\"BetterVis_Boxplot_MixViolin\", package = \"BetterVis\") colors 3.2.2 Simple Example BetterVis_Boxplot_MixViolin(data = iris, x_var = \"Species\", y_var = \"Sepal.Length\", fill_color = colors,box_size = 0.5,y_max_adjust = 2,y_min_adjust = 1) 3.2.3 Advanced Example BetterVis_Boxplot_MixViolin(data = iris,x_var =\"Species\",y_var = \"Sepal.Length\",fill_color = colors, y_max_adjust = 2,y_min_adjust = 1,box_size = 0.5, title = \"\",title_size = 25,title_bold = F,title_hjust = 0.5,title_vjust = 0, xlab = \"Species\",ylab = \"Sepal.Length\", border = T,panel_background_color = \"#f3f6f6\", axis_x_title =element_text(size = 22,color = \"#b35959\",face = \"bold\"), axis_y_title =element_text(size = 22,color = \"#b35959\",face = \"bold\"), legend_show = T,legend_title = \"Species\",legend_title_size = 15,legend_title_bold = F, legend_text_size=12,legend_text_bold = F, stat_compare_means = T,compare_symbol = \"SYMBOL\") #+themes()+guides() 3.2.4 Adjusting variables and redrawing the plot BetterVis_Boxplot_MixViolin(data = iris,x_var = \"Group2\",y_var = \"Sepal.Length\",fill_color = colors, y_max_adjust = 2,y_min_adjust = 1,box_size = 0.5, title = \"You can write title here\",title_size = 25,title_bold = F,title_hjust = 0.5,title_vjust = 0, xlab = \"Group2\",ylab = \"Sepal.Length\", border = T,panel_background_color = \"#f3f6f6\", axis_x_title =element_text(size = 22,color = \"#b35959\",face = \"bold\"), axis_y_title =element_text(size = 22,color = \"#b35959\",face = \"bold\"), legend_show = T,legend_title = \"Group2\",legend_title_size = 15,legend_title_bold = F,legend_text_size=12,legend_text_bold = F,stat_compare_means = T,compare_symbol = \"SYMBOL\") #+theme(axis.title.x = element_blank()) 3.2.5 Parameter explanation data: The input dataset. x_var: The grouping variable for the x-axis (should be a factor). y_var: The numerical variable for the y-axis. fill_color: A vector of colors for the boxplot fills. The length should match the number of levels in the x_var factor (e.g., c(\"#FC5D5C\", \"#4B6A9D\", \"#167D7D\")). box_size: The line thickness of the boxplots. Default: 0.5. y_max_adjust: A numeric value to adjust the upper y-axis limit. Default: 1. y_min_adjust: A numeric value to adjust the lower y-axis limit. Default: 1. title: The main title for the plot. title_size: A numeric value for the main title's font size. Default: 16. title_bold: A logical value (TRUE/FALSE) to make the main title bold. Default: FALSE. title_hjust: A numeric value to horizontally adjust the main title's position. Default: 0.5. title_vjust: A numeric value to vertically adjust the main title's position. Default: 1. xlab: The title for the x-axis. ylab: The title for the y-axis. border: A logical value (TRUE/FALSE) indicating whether to display the plot panel border. Default: TRUE. panel_background_color: The background color of the plot panel. Default: \"#f3f6f6\". axis_x_title: An element_text object to style the x-axis title. Default: element_text(size = 22, color = \"#b35959\", face = \"bold\"). axis_y_title: An element_text object to style the y-axis title. Default: element_text(size = 22, color = \"#b35959\", face = \"bold\"). legend_show: A logical value (TRUE/FALSE) to show or hide the legend. Default: TRUE. legend_title: The title of the legend. legend_title_size: A numeric value for the legend title's font size. Default: 15. legend_title_bold: A logical value (TRUE/FALSE) to make the legend title bold. Default: FALSE. legend_text_size: A numeric value for the legend item text size. Default: 12. legend_text_bold: A logical value (TRUE/FALSE) to make the legend item text bold. Default: FALSE. stat_compare_means: A logical value (TRUE/FALSE) indicating whether to add significance comparison lines. Default: TRUE. compare_symbol: The type of significance marker to display. Accepts \"SYMBOL\" (for asterisks) or \"NUMBER\" (for p-values). Default: \"SYMBOL\". 3.3 Important Notes Properly setting ylim is important to ensure that the entire boxplot, including any significance indicators, is fully visible. When using comparison_col and comparison, the comparison list should specify pairs of groups found within the comparison_col variable. This feature is best visualized when use_facet = TRUE. You can further customize elements like fonts, borders, etc., by adding standard ggplot2 theme() or guide() functions to the plot object afterwards. Copyright (c) 2025 zyt all right reserved，powered by GitbookLast revised on： 2025-08-04 16:37:10 "},"Chapter4 Barplot.html":{"url":"Chapter4 Barplot.html","title":"Chapter 4: Barplots","keywords":"","body":"Chapter 4 Barplot At the Beginning BetterVis package must be loaded beforehand. library(BetterVis) library(grid) 3.1 BetterVis_Barplot_Accumulative The BetterVis_Barplot_Accumulative function allows you to display two stacked bar plots simultaneously, though you also have the option to show each one individually 3.1.1 Data Input data(\"BetterVis_Barplot_Accumulative_example\", package = \"BetterVis\") barplot_color = c(\"#ABDDDE\", \"#FAD510\", \"#C6CDF7\", \"#F4B5BD\", \"#FAEED1\",\"#0A9F9D\", \"#005295\", \"#E6A0C4\",\"#C52E19\",\"orange\") 3.1.2 Simple Example BetterVis_Barplot_Accumulative( data = BetterVis_Barplot_Accumulative_example, x_var = \"celltype\", y1_var = \"cell_num\", y2_var = \"percent\", fill_var = \"Patient\", display = 3, barplot_color = barplot_color, ylim1 = c(0, 15000), ylim2 = c(0, 1), coord_flip = T ) 3.1.3 Advanced Example BetterVis_Barplot_Accumulative( data = BetterVis_Barplot_Accumulative_example, x_var = \"celltype\", y1_var = \"cell_num\", y2_var = \"percent\", fill_var = \"Patient\", display = 3, barplot_color = barplot_color, ylim1 = c(0, 15000), ylim2 = c(0, 1), axis_titles_x = \"Cell Types\", x_label_angle = 0, x_label_bold = TRUE, axis_title_x_size = 14, axis_titles_y1 = \"Cell Count\", axis_titles_y2 = \"Sample Ratio\", y1_label_bold = T,y2_label_bold = TRUE, axis_title_y1_size = 14,axis_title_y2_size = 14, title1 = \"Cell Number Distribution\", title2 = \"Sample Ratio Distribution\", title_size = 10,title_bold = T, legend_show = T, legend_title = \"Legend\", legend_size = 14, legend_position = \"bottom\", legend_row = NULL,legend_col=NULL, background_color = \"white\", coord_flip = T, grid_ncol = 2,grid_layout = rbind(c(1, 1, 1, 1, 1, 2, 2), c(1, 1, 1, 1, 1, 2, 2)), p1_theme = NULL,p2_theme = NULL,p1_guide = NULL,p2_guide = NULL ) 3.1.4 We have modified the iris dataset to create these boxplots iris$Group %dplyr::select(Petal.Width,Group2,Group) iris 3.1.5 Parameter explanation data: The input dataset. x_var: The grouping variable for the x-axis (should be a factor). y1_var: The numerical variable for the y-axis of the first plot. y2_var: The numerical variable for the y-axis of the second plot. fill_var: The variable used for the fill color (should be a factor). display: A numeric value indicating which plot(s) to display: 1 for the first plot, 2 for the second plot, or 3 to display both. barplot_color: A vector of colors for the bar plot fills. The length should match the number of levels in the fill_var factor (e.g., c(\"#FC5D5C\", \"#4B6A9D\", \"#167D7D\")). ylim1: Sets the y-axis limits for the first plot (e.g., c(0, 100)). ylim2: Sets the y-axis limits for the second plot (e.g., c(0, 100)). axis_titles_x: The title for the x-axis (a string). Use \"\" for no title. x_label_angle: A numeric value for the angle of the x-axis text labels. x_label_bold: A logical value (TRUE/FALSE) to make the x-axis text labels bold. Default: FALSE. axis_title_x_size: A numeric value for the font size of the x-axis title. axis_titles_y1: The title for the y-axis of the first plot (a string). Use \"\" for no title. axis_titles_y2: The title for the y-axis of the second plot (a string). Use \"\" for no title. y1_label_bold: A logical value (TRUE/FALSE) to make the y-axis text labels of the first plot bold. Default: FALSE. y2_label_bold: A logical value (TRUE/FALSE) to make the y-axis text labels of the second plot bold. Default: FALSE. axis_title_y1_size: A numeric value for the font size of the y-axis title of the first plot. axis_title_y2_size: A numeric value for the font size of the y-axis title of the second plot. title1: The main title for the first plot. title2: The main title for the second plot. title_bold: A logical value (TRUE/FALSE) to make the main plot titles bold. Default: FALSE. title_size: A numeric value for the font size of the main plot titles. title1_size: A numeric value for the font size of the first plot's title. title2_size: A numeric value for the font size of the second plot's title. title1_bold: A logical value (TRUE/FALSE) to make the first plot's title bold. title2_bold: A logical value (TRUE/FALSE) to make the second plot's title bold. legend_show: A logical value (TRUE/FALSE) to show or hide the legend. Default: TRUE. legend_title: The title of the legend. legend_size: A numeric value for the font size of the legend text. legend_position: The position of the legend (e.g., \"bottom\", \"right\", \"none\"). Default: \"bottom\". legend_row: The number of rows for the legend items. legend_col: The number of columns for the legend items. background_color: The background color of the plot panel. Default: \"white\". coord_flip: A logical value (TRUE/FALSE) indicating whether to flip the coordinates (to create horizontal bars). Default: TRUE. grid_ncol: The number of columns when arranging the combined plots. Default: 2. grid_layout: Parameters for arranging the combined plots, likely passed to a layout function like patchwork::plot_layout(). p1_theme: A theme() object to apply additional customizations to the first plot (p1). p2_theme: A theme() object to apply additional customizations to the second plot (p2). p1_guide: A guides() object to apply additional legend customizations to the first plot (p1). p2_guide: A guides() object to apply additional legend customizations to the second plot (p2). 3.1.6 Important Note Properly setting ylim1 and ylim2 is crucial to ensure that the entire plot, including all of its elements, is fully visible. Keep in mind that when coord_flip is changed, the roles of the x and y axes are swapped. This means any theme customizations for axis.x will apply to the vertical axis, and settings for axis.y will apply to the horizontal axis. 3.2 BetterVis_Barplot_Bidirectional Sometimes, a back-to-back bar chart is needed to display contrasting information, such as when comparing a treatment group against a control group. 3.2.1 Data Input data(\"BetterVis_Barplot_Bidirectional_example\", package = \"BetterVis\") 3.2.2 Simple Example BetterVis_Barplot_Bidirectional( data = BetterVis_Barplot_Bidirectional_example,x_var = \"Percentage\", y_var = \"pathway\", fill_var = \"Species\", barplot_color = c(\"#ABDDDE\", \"#FAD510\", \"#C6CDF7\", \"#F4B5BD\", \"#0A9F9D\", \"#FAEED1\", \"#005295\", \"#E6A0C4\", \"#C52E19\", \"orange\"), title = \"Species Contribution to Pathways\",legend_title = \"Species Contribution\", ylim = c(1, 8), arrow = F,plot_margin = unit(c(1,0.3,0.3,0.3),unit=\"cm\")) 3.2.3 Advanced Example BetterVis_Barplot_Bidirectional( data = BetterVis_Barplot_Bidirectional_example,x_var = \"Percentage\", y_var = \"pathway\", fill_var = \"Species\", barplot_color = c(\"#ABDDDE\", \"#FAD510\", \"#C6CDF7\", \"#F4B5BD\", \"#0A9F9D\", \"#FAEED1\", \"#005295\", \"#E6A0C4\", \"#C52E19\", \"orange\"), axis_titles_x = \"\", x_label_angle = 0, x_label_bold = TRUE, axis_title_x_size = 14, axis_titles_y = \"\", y_label_bold = TRUE, y_label_angle = 0,axis_title_y_size = 14, title = \"Species Contribution to Pathways\", title_size = 16, title_bold = TRUE, legend_show = TRUE, legend_title = \"Species Contribution\", legend_size = 10, background_color = \"white\", ylim = c(1, 8), plot_margin = unit(c(2,0.3,0.3,0.3),unit=\"cm\"), arrow = T, arrow_x1 = c(0.35, 0.2), arrow_x2 = c(0.48, 0.63), arrow_y1 = c(0.88, 0.88), arrow_y2 = c(0.88, 0.88), arrow_col = \"black\", arrow_size = 0.5, arrow_text = c(\"Enriched in Enriched in Disease Group\",\"Enriched in Control Group\"),arrow_text_size = 12,arrow_text_adjust = 0.03, right_text = T,right_text1 = \"n = 154 for Disease\",right_text2 = \"n = 192 for Control\",right_text_hjust = 1.2,right_text_vjust = -3,right_text_size =4 ) 3.2.4 We have modified the iris dataset to create these boxplots iris$Group 3.2.5 Parameter explanation data: The input dataset. x_var: The grouping variable for the x-axis (should be a factor). y_var: The numerical variable for the y-axis. fill_var: The variable used for the fill color (should be a factor). barplot_color: A vector of colors for the bar plot fills. The length should match the number of levels in the fill_var factor (e.g., c(\"#FC5D5C\", \"#4B6A9D\", \"#167D7D\")). axis_titles_x: The title for the x-axis (a string). Use \"\" for no title. x_label_angle: A numeric value for the angle of the x-axis text labels. x_label_bold: A logical value (TRUE/FALSE) to make the x-axis text labels bold. Default: FALSE. axis_title_x_size: A numeric value for the font size of the x-axis title. axis_titles_y: The title for the y-axis (a string). Use \"\" for no title. y_label_bold: A logical value (TRUE/FALSE) to make the y-axis text labels bold. Default: FALSE. y_label_angle: A numeric value for the angle of the y-axis text labels. axis_title_y_size: A numeric value for the font size of the y-axis title. title: The main title of the plot. axis_title_bold: A logical value (TRUE/FALSE) to make the axis titles (both x and y) bold. Default: FALSE. title_size: A numeric value for the font size of the main plot title. legend_show: A logical value (TRUE/FALSE) to show or hide the legend. Default: TRUE. legend_title: The title for the legend. legend_size: A numeric value for the font size of the legend text. background_color: The background color of the plot panel. Default: \"white\". ylim: Sets the y-axis limits (e.g., c(0, 100)). arrow: A logical value (TRUE/FALSE) indicating whether to display arrows. Default: TRUE. arrow_x1: A numeric vector specifying the x-axis range for the first arrow's span (e.g., c(0.35, 0.2)). arrow_x2: A numeric vector specifying the x-axis range for the second arrow's span (e.g., c(0.48, 0.63)). arrow_y1: A numeric vector specifying the y-axis range for the first arrow's span (e.g., c(0.88, 0.88)). arrow_y2: A numeric vector specifying the y-axis range for the second arrow's span (e.g., c(0.88, 0.88)). arrow_col: A string defining the color of the arrows. arrow_size: A numeric value defining the size of the arrows. arrow_text: A character vector of length 2 for the text to be displayed above the arrows (e.g., c(\"AA\", \"BB\")). arrow_text_size: A numeric value to adjust the font size of the arrow text. arrow_text_adjust: A numeric value to adjust the vertical position (height) of the arrow text. right_text: A logical value (TRUE/FALSE) indicating whether to display text in the bottom-right corner. Default: FALSE. right_text1: A string for the first line of text in the bottom-right corner. right_text2: A string for the second line of text in the bottom-right corner. right_text_hjust: A numeric value to horizontally adjust the bottom-right text. Larger values move the text to the left. right_text_vjust: A numeric value to vertically adjust the bottom-right text. Larger values move the text down. right_text_size: A numeric value for the font size of the bottom-right text. 3.2.6 Important Notes Properly setting ylim is crucial to ensure that the entire plot, including all annotations and elements, is fully visible. To add arrows, annotation text, or the text in the bottom-right corner, you may need to first expand the plot_margin (with values for top, right, bottom, left) to create sufficient space. Note that you must manually adjust the position values (e.g., arrow_x1, arrow_x2, etc.) to place these elements correctly. Regarding the text adjustment parameters: for right_text_hjust, larger values move the text to the left (not the right), and for right_text_vjust, larger values move the text down (not up). 3.3 BetterVis_Barplot_Circle When a category contains a large number of individual items, consider using a circular bar plot for visualization. The BetterVis_Barplot_Circle function is specifically designed for this purpose. 3.3.1 Data Input data(\"BetterVis_Barplot_Circle_example\", package =\"BetterVis\") barplot_color = c(\"#ABDDDE\", \"#FAD510\", \"#C6CDF7\") 3.3.2 Simple Example BetterVis_Barplot_Circle(data = BetterVis_Barplot_Circle_example,x_var = \"id\",y_var=\"med_LFC\",fill_var = \"type\",label_var = \"geneSymbol\",barplot_color = barplot_color,y_continuous_limit = c(-3, 3)) 3.3.3 Advanced Example BetterVis_Barplot_Circle(data = BetterVis_Barplot_Circle_example, x_var = \"id\", y_var = \"med_LFC\", fill_var = \"type\",label_var = \"geneSymbol\", barplot_color = barplot_color, y_continuous_limit = c(-6, 3), point_shape = 19,point_alpha = 0.7, text_adjust = 0.5, text_size = 4,text_alpha = 0.9, text_bold = T, size_legend = F, fill_legend = T, legend_bold = T,legend_size = 10,legend_title_size = 12,legend_title_bold = T) #+theme(legend.position = \"bottom\") + guides(size = guide_legend(title = \"Size Legend\")) 3.3.4 Parameter explanation data: The input dataset. x_var: The grouping variable for the x-axis (should be a factor). y_var: The numerical variable for the y-axis. fill_var: The variable used for the fill color (should be a factor). label_var: The name of the column to be used for the outer labels. barplot_color: A vector of colors for the bar plot fills. The length should match the number of levels in the fill_var factor (e.g., c(\"#FC5D5C\", \"#4B6A9D\", \"#167D7D\")). y_continuous_limit: A numeric vector to adjust the radial size of the plot (e.g., c(-5, 6)). A smaller second number makes the plot appear larger. point_shape: The shape of the points at the top of the bars. point_alpha: The transparency (alpha) of the points at the top of the bars. title1_size: A numeric value for the plot title's font size. text_adjust: A numeric value to adjust the distance of the outer labels from the bars. Larger values increase the distance. text_size: The font size of the outer labels. text_alpha: The transparency (alpha) of the outer labels. text_bold: A logical value (TRUE/FALSE) to make the outer labels bold. Default: TRUE. size_legend: A logical value (TRUE/FALSE) indicating whether to display the legend for label_var. Default: FALSE. fill_legend: A logical value (TRUE/FALSE) indicating whether to display the legend for the fill_var column. legend_bold: A logical value (TRUE/FALSE) to make the legend item text bold. Default: TRUE. legend_size: A numeric value for the font size of the legend item text. legend_title_bold: A logical value (TRUE/FALSE) to make the legend title bold. Default: TRUE. legend_title_size: A numeric value for the font size of the legend title. 3.3.5 Important Notes The y_continuous_limit setting is crucial, as it directly controls the appearance and visibility of the plot. The id column should contain a numeric sequence from 1 to n (where n is the total number of rows in the data frame). 3.4 BetterVis_Barplot_Experiment In BetterVis_Barplot_Experiment, we have streamlined the method for presenting multi-group bar plots and for visualizing significance comparisons across facets, allowing for rapid comparisons between multiple groups. 3.4.1 Data Input data(\"BetterVis_Barplot_Experiment_example\", package = \"BetterVis\") 3.4.2 Simple Example BetterVis_Barplot_Experiment( data = BetterVis_Barplot_Experiment_example,x_var = \"supp\",y_var = \"len\",fill_var = \"dose\", comparison_col = \"dose\",comparison_method = \"t.test\", comparison = list(c(\"dose_1\", \"dose_2\"),c(\"dose_1\", \"dose_3\"),c(\"dose_2\", \"dose_3\")), barplot_color = c(\"#E84A32\", \"#4CBCD2\", \"#00A18A\"), facet = T, ylim = c(0,45) ) 3.4.3 Advanced Example BetterVis_Barplot_Experiment( data = BetterVis_Barplot_Experiment_example,x_var = \"supp\",y_var = \"len\",fill_var = \"dose\", jitter = TRUE,jitter_color =c(\"black\",\"black\",\"black\"), jitter_width = 0.2,jitter_alpha = 0.7,jitter_size = 3, legend_show = F,legend_title = \"Dose\", comparison_col = \"dose\",comparison_method = \"t.test\", comparison = list(c(\"dose_1\", \"dose_2\"),c(\"dose_1\", \"dose_3\"),c(\"dose_2\", \"dose_3\")), barplot_color = c(\"#E84A32\", \"#4CBCD2\", \"#00A18A\"), facet = T,facet_title_size = 16, y_label_bold = T,axis_titles_y = \"\", x_label_angle = 45,x_label_bold = TRUE,axis_titles_x = c(\"\"), title = \"\",axis_title_bold = T, error_bar_width = 0.5,error_bar_size = 0.5,bar_border = T,bar_border_size = 0.8, background_color = \"white\",sig_type = \"SYMBOL\",ylim = c(0,45) )+theme()+guides() 3.4.4 We have modified the iris dataset to create these boxplots iris$Group 3.4.5 Parameter explanation data: The input dataset. x_var: The grouping variable for the x-axis (should be a factor). y_var: The numerical variable for the y-axis. fill_var: The variable used for the fill color (should be a factor). jitter: A logical value (TRUE/FALSE) indicating whether to display jittered points. Default: TRUE. jitter_color: A vector of colors for the jittered points. The length should match the number of factor levels. jitter_width: A numeric value for the width of the jitter. Default: 0.2. jitter_alpha: A numeric value for the transparency (alpha) of the jittered points. Default: 0.7. jitter_size: A numeric value for the size of the jittered points. Default: 1.5. legend_show: A logical value (TRUE/FALSE) indicating whether to display the legend. Default: TRUE. legend_title: The title of the legend. comparison_col: A string specifying the name of the variable to use for comparisons. comparison_method: The statistical method for comparison. Accepts \"wilcox\" or \"t.test\". Default: \"t.test\". comparison: A list specifying the groups to compare (e.g., list(c(\"group1\", \"group2\"))). barplot_color: A vector of colors for the bar plot fills. The length should match the number of levels in the fill_var factor (e.g., c(\"#FC5D5C\", \"#4B6A9D\", \"#167D7D\")). facet: A logical value (TRUE/FALSE) indicating whether to use faceting. Default: FALSE. facet_title_size: A numeric value for the font size of the facet titles (strip text). y_label_bold: A logical value (TRUE/FALSE) to make the y-axis text labels bold. Default: FALSE. axis_titles_y: The title for the y-axis (a string). Use \"\" for no title. x_label_angle: A numeric value for the angle of the x-axis text labels. x_label_bold: A logical value (TRUE/FALSE) to make the x-axis text labels bold. Default: FALSE. axis_titles_x: The title for the x-axis (a string). Use \"\" for no title. title: The main title of the plot. axis_title_bold: A logical value (TRUE/FALSE) to make the axis titles (both x and y) bold. Default: FALSE. error_bar_width: A numeric value for the width of the error bars. error_bar_size: A numeric value for the line thickness of the error bars. bar_border: A logical value (TRUE/FALSE) indicating whether to display a border around the bars. Default: TRUE. bar_border_size: A numeric value for the thickness of the bar border. background_color: The background color of the plot panel. Default: \"white\". sig_type: The type of significance marker to display. Accepts \"SYMBOL\" (for asterisks) or \"NUMBER\" (for p-values). Default: \"SYMBOL\". ylim: Sets the y-axis limits (e.g., c(0, 100)). custom_theme, custom_guides: Not user-adjustable. Used internally to interface with theme() or guides() functions for further customization. 3.4.6 Important Notes Properly setting ylim is important to ensure that the entire plot, including all its elements, is fully visible. When using comparison_col and comparison, the comparison list should specify pairs of groups found within the comparison_col variable. This feature is best visualized when use_facet = TRUE. 3.5 BetterVis_Barplot_Horizontal Horizontal bar charts are frequently used for classic enrichment analyses and for pathway visualization. With BetterVis_Barplot_Horizontal, we provide a highly aesthetic and effective way to create these plots. 3.5.1 Data Input df 3.5.2 Simple Example BetterVis_Barplot_Horizontal( data = df,x_var = \"Description\",y_var = \"Count\",fill_var = \"LogP\", label_y_var = \"Description\", label_other_var = \"Genes\",fill_legend_title = \"logP\", fill_gradient = list(low = \"#486b98\", mid = \"#f5f2b1\", high = \"#b93735\", midpoint = 3), y_label_out = T,label_other_display = T ) ) 3.5.3 Advanced Example BetterVis_Barplot_Horizontal( data = df,x_var = \"Description\",y_var = \"Count\",fill_var = \"LogP\", label_y_var = \"Description\",label_other_var = \"Genes\", bar_width = 0.4,base_size = 30, label_y_start = 0.5,label_y_size = 5,label_y_hjust = 0,label_y_vjust = 1, label_other_start = 0.5,label_other_size = 4.5,label_other_hjust = 0,label_other_vjust = 2.4, fill_gradient = list(low = \"#486b98\", mid = \"#f5f2b1\", high = \"#b93735\", midpoint = 3), color_gradient = list(low = \"#486b98\", mid = \"#f5f2b1\", high = \"#b93735\", midpoint = 3), fill_legend = TRUE, fill_legend_title=\"logp\",color_legend = F,color_legend_title = \"col_lengend\", legend_title_size = 16, legend_text_size = 16, xlab_text = \" Names\",ylab_text = \"Gene Count\", plot_title = \"KEGG Enrichment Analysis\", y_label_out = T,label_other_display = T ) ##+theme(axis.title.x = element_blank()) 3.5.4 Parameter explanation data: The input dataset. x_var: The grouping variable for the x-axis (should be a factor). y_var: The numerical variable for the y-axis. fill_var: The variable used for the fill color (should be a factor). label_y_var: The column used for the y-axis labels (usually the same as y_var, but can be different). label_other_var: An additional column to use for labeling. bar_width: A numeric value to adjust the width (height) of the horizontal bars. Default: 0.5. base_size: A numeric value to adjust the overall scaling of the plot's text and elements. Default: 30. label_y_start: The starting position for the y-axis labels. Default: 0.5. label_y_size: The font size for the y-axis labels. Default: 5. label_y_hjust: Horizontal adjustment for the y-axis labels. Default: 1. label_y_vjust: Vertical adjustment for the y-axis labels. Default: 0. label_other_start: The starting position for the additional labels (label_other_var). Default: 0.5. label_other_size: The font size for the additional labels. Default: 4.5. label_other_hjust: Horizontal adjustment for the additional labels. Default: 1. label_other_vjust: Vertical adjustment for the additional labels. Default: 2.4. fill_gradient: A list of parameters to control the color gradient for the bar fills. Default: list(low = \"#486b98\", mid = \"#f5f2b1\", high = \"#b93735\", midpoint = 3). color_gradient: A list of parameters to control the color gradient for the label text. Default: list(low = \"#486b98\", mid = \"#f5f2b1\", high = \"#b93735\", midpoint = 3). fill_legend: A logical value (TRUE/FALSE) to show or hide the legend for fill_var. Default: TRUE. fill_legend_title: The title for the fill_var legend. color_legend: A logical value (TRUE/FALSE) to show or hide the legend for label_other_var. Default: TRUE. color_legend_title: The title for the label_other_var legend. legend_title_size: A numeric value for the font size of the legend titles. legend_text_size: A numeric value for the font size of the legend item text. xlab_text: The title for the x-axis. ylab_text: The title for the y-axis. plot_title: The main title for the plot. y_label_out: A logical value (TRUE/FALSE). If TRUE, y-axis labels are placed outside the plot area; otherwise, they are placed inside. Default: FALSE. 3.5.5 Important Notes The midpoint setting is crucial. We recommend setting it to the median or mean of the fill_var column to correctly center the color scale. When y_label_out is set to TRUE, the y-axis labels will be positioned outside the plot area. 3.6 BetterVis_Barplot_Horizontal2 Horizontal bar charts are frequently used for classic enrichment analyses and for pathway visualization. With BetterVis_Barplot_Horizontal2, we provide another highly aesthetic and effective way to create these plots. 3.6.1 Data Input df 3.6.2 Simple Example BetterVis_Barplot_Horizontal2( data = df,x_var = \"Description\",y_var = \"Count\",fill_var = \"LogP\",label_y_var = \"Description\", label_other_var = \"Genes\", fill_gradient = list(low = \"#486b98\", mid = \"#f5f2b1\", high = \"#b93735\", midpoint = 3),y_label_out = F,label_other_display = T,Category_Var = \"Category2\",category_var_color = c(\"#c3e1e6\",\"#f3dfb7\",\"#dcc6dc\"),annot_y_offset = -1,annot_y_width = 0.5) BetterVis_Barplot_Horizontal2( data = df,x_var = \"Description\",y_var = \"LogP\",fill_var = \"Category2\",fill_var_color = c(\"#c3e1e6\",\"#f3dfb7\",\"#dcc6dc\"), label_y_var = \"Description\", label_other_var = \"Genes\", y_label_out = F,label_other_display = T,Category_Var = \"Category2\",category_var_color = c(\"#c3e1e6\",\"#f3dfb7\",\"#dcc6dc\"), annot_y_offset = -1,annot_y_width = 0.2,fill_legend = T,fill_legend_title = \"Group\",ylab_text = \"LogP\" )+geom_point(aes(y=-0.5,size=Count,fill=Category2),shape=21)+scale_size_area(max_size = 15) + geom_text(aes(y = -0.5, label = Count), color = \"black\", size = 5) 3.6.3 Advanced Example BetterVis_Barplot_Horizontal2( data = df,x_var = \"Description\",y_var = \"Count\",fill_var = \"LogP\", label_y_var = \"Description\", label_other_var = \"Genes\", bar_width = 0.4,base_size = 30, label_y_start = 0.5,label_y_size = 5,label_y_hjust = 0,label_y_vjust = 1, label_other_start = 0.5,label_other_size = 4.5,label_other_hjust = 0,label_other_vjust = 2.4, fill_gradient = list(low = \"#486b98\", mid = \"#f5f2b1\", high = \"#b93735\", midpoint = 3), color_gradient = list(low = \"#486b98\", mid = \"#f5f2b1\", high = \"#b93735\", midpoint = 3), fill_legend = T, fill_legend_title=\"logp\",color_legend = F,color_legend_title = \"col_lengend\", legend_title_size = 16, legend_text_size = 16, xlab_text = \" Names\",ylab_text = \"Gene Count\", plot_title = \"KEGG Enrichment Analysis\", y_label_out = F,label_other_display = T,Category_Var = \"Category2\",category_var_color = c(\"#c3e1e6\",\"#f3dfb7\",\"#dcc6dc\"), annot_y_offset = -1.5,annot_y_width = 0.8,category_text_display=T,category_text_angle=90 ) ##+theme(axis.title.x = element_blank()) 3.6.5 Parameter explanation data: The input dataset. x_var: The grouping variable for the x-axis (should be a factor). y_var: The numerical variable for the y-axis. fill_var: The variable used for the fill color (should be a factor). fill_var_color: A vector of colors for the fill_var levels. Category_Var: The variable used to create the annotation bar. category_var_color: A vector of colors for the categories in the annotation bar. annot_y_offset: A numeric value to adjust the position of the annotation bar. Default: -0.5. annot_y_width: A numeric value to adjust the width (height) of the annotation bar. Default: 0.2. label_y_var: The column used for the y-axis labels (usually the same as y_var, but can be different). label_other_var: An additional column to use for labeling. bar_width: A numeric value to adjust the width (height) of the horizontal bars. Default: 0.5. base_size: A numeric value to adjust the overall scaling of the plot's text and elements. Default: 30. label_y_start: The starting position for the y-axis labels. Default: 0.5. label_y_size: The font size for the y-axis labels. Default: 5. label_y_hjust: Horizontal adjustment for the y-axis labels. Default: 1. label_y_vjust: Vertical adjustment for the y-axis labels. Default: 0. label_other_start: The starting position for the additional labels (label_other_var). Default: 0.5. label_other_size: The font size for the additional labels. Default: 4.5. label_other_hjust: Horizontal adjustment for the additional labels. Default: 1. label_other_vjust: Vertical adjustment for the additional labels. Default: 2.4. fill_gradient: Parameters for the bar fill color gradient. Default: NULL. color_gradient: Parameters for the label text color gradient. Default: NULL. fill_legend: A logical value (TRUE/FALSE) to show or hide the legend for fill_var. Default: TRUE. fill_legend_title: The title for the fill_var legend. color_legend: A logical value (TRUE/FALSE) to show or hide the legend for label_other_var. Default: TRUE. color_legend_title: The title for the label_other_var legend. legend_title_size: A numeric value for the font size of the legend titles. legend_text_size: A numeric value for the font size of the legend item text. xlab_text: The title for the x-axis. ylab_text: The title for the y-axis. plot_title: The main title for the plot. y_label_out: A logical value (TRUE/FALSE). If TRUE, y-axis labels are placed outside the plot area; otherwise, they are placed inside. Default: FALSE. label_other_display: A logical value (TRUE/FALSE) indicating whether to display the additional labels from label_other_var. category_text_display: A logical value (TRUE/FALSE) indicating whether to display text on the annotation bar. category_text_angle: A numeric value for the angle of the text on the annotation bar. 3.6.6 Important Notes The annot_y_offset and annot_y_width parameters are important for adjusting the position and width of the annotation bar. When y_label_out is set to TRUE, the y-axis labels will be positioned outside the plot area. Copyright (c) 2025 zyt all right reserved，powered by GitbookLast revised on： 2025-08-04 17:22:31 "},"Chapter5 Network Plot.html":{"url":"Chapter5 Network Plot.html","title":"Chapter 5: Network Plot","keywords":"","body":"Chapter 5 Network Plot At the Beginning BetterVis package must be loaded beforehand. library(BetterVis) 5.1 BetterVis_Network_PPI To address the common need for visualizing gene interactions in medical research, we developed BetterVis_Network_PPI. This function is specifically designed for plotting protein-protein interaction (PPI) networks, based on code consolidated from other researchers. 5.1.1 Data Input nodes 5.1.2 Usage Example BetterVis_Network_PPI(nodes_data = nodes,edges_data = edges, fill_vars = c(\"full\",\"within5\",\"after5\",\"early\",\"late\"), fill_color = colors, group_var = \"manual_grp\", node_size = c(0.08, 0.25),node_text_size = 4, line_size = c(0.5, 2.5),line_color = \"grey65\", niter = 800,display_border = T) #+theme(legend.text = element_text(size=12))+guides() 5.1.3 Parameter explanation nodes_data: A data frame containing information for the plot's nodes, including their categories. edges_data: A data frame containing information for the edges (lines), including connection strength or weight. fill_vars: The name of the column in nodes_data that will be used to determine the fill color of the nodes. fill_color: A vector of colors to use for the node fills. group_var: The name of the column used to group nodes together with a surrounding dashed box. node_size: A numeric vector of length 2 specifying the size range for the nodes. Default: c(0.1, 0.3). node_text_size: A numeric value for the font size of the node labels. Default: 4. line_size: A numeric vector of length 2 specifying the range for the line (edge) thickness. Default: c(0.5, 2.5). line_color: The color of the lines (edges). Default: \"grey65\". niter: A numeric value controlling the layout algorithm's iterations, which affects node spread. Default: 800. display_border: A logical value (TRUE/FALSE) indicating whether to display the dashed border boxes around the groups defined by group_var. 5.1.4 Important Note The fill_var parameter supports a minimum of 2 and a maximum of 5 distinct categories for color mapping. The group_var parameter is optional. If it is not provided, the dashed border boxes around groups will not be drawn. Copyright (c) 2025 zyt all right reserved，powered by GitbookLast revised on： 2025-08-04 17:27:43 "},"Chapter6 Heatmap.html":{"url":"Chapter6 Heatmap.html","title":"Chapter 6: Heatmap","keywords":"","body":"Chapter 6 Heatmap At the Beginning BetterVis package must be loaded beforehand. library(BetterVis) library(MetBrewer) 6.1 BetterVis_Heatmap_Bicontinuous BetterVis_Heatmap_Bicontinuous is the best choice for creating heatmaps with a diverging color scale, which is perfect for representing continuous data that spans two extremes from a central point. 6.1.1 Data Input df 6.1.2 Simple Example BetterVis_Heatmap_Bicontinuous(data = df, x_var = \"ID\", y_var = \"name\", fill_var = \"value\",legend_title = \"Change\") 6.1.3 Advanced Example BetterVis_Heatmap_Bicontinuous(df, x_var =\"ID\", y_var =\"name\", fill_var =\"value\", vline_position = 0.25, hline_position = 0, vline_color = \"black\", hline_color = \"black\", hline_linetype = \"dashed\", heatmap_color = rev(met.brewer(\"Hiroshige\")), legend_break = 1, legend_title = \"Change\",legend_position = \"bottom\",legend_title_position = \"bottom\") + theme(axis.text = element_text(size = 12)) 6.1.4 We have generated a new dataset to verify its validity BetterVis_Heatmap_Bicontinuous(new_df, x_var =\"ID\", y_var =\"name\", fill_var =\"value\", vline_position = 15, hline_position = 300, vline_color = \"black\", hline_color = \"black\", hline_linetype = \"dashed\", heatmap_color = rev(met.brewer(\"Hiroshige\")), legend_break = 1, legend_title = \"Change\",legend_position = \"bottom\",legend_title_position = \"bottom\") + theme(axis.text = element_text(size = 12)) 6.1.5 Parameter explanation df: The input data frame. x_var: The column name for the continuous variable on the x-axis. y_var: The column name for the continuous variable on the y-axis. fill_var: The column name for the continuous variable used for the fill color. vline_position: The position for the vertical line. Default: 0.25. hline_position: The position for the horizontal line. Default: 0. vline_color: The color of the vertical line. Default: \"black\". hline_color: The color of the horizontal line. Default: \"black\". hline_linetype: The line style for the horizontal line (e.g., \"dashed\", \"solid\"). Default: \"dashed\". heatmap_color: The color palette for the heatmap fill. Default: rev(met.brewer(\"Hiroshige\")). legend_break: The interval between breaks on the color bar legend. Default: 1. legend_title: The title for the legend. Default: NULL. legend_position: The position of the legend (e.g., \"bottom\", \"right\"). Default: \"bottom\". legend_title_position: The position of the legend title relative to the legend itself (e.g., \"top\", \"bottom\"). Default: \"bottom\". 6.2 BetterVis_Heatmap_Circle The BetterVis_Heatmap_Circle function enables the visualization of multiple numeric columns as a series of concentric heatmap rings. This approach can offer a more visually engaging presentation than a standard rectangular heatmap. 6.2.1 Data Input data(\"BetterVis_Heatmap_Circle_example\",package=\"BetterVis\") 6.2.2 Simple Example BetterVis_Heatmap_Circle(data = BetterVis_Heatmap_Circle_example, value_var = \"value\", classified_text_var = \"id\", classified_value_var = \"name\") 6.2.3 Advanced Example BetterVis_Heatmap_Circle(data = BetterVis_Heatmap_Circle_example, value_var = \"value\", classified_text_var = \"id\", classified_value_var = \"name\", heatmap_color = alpha(met.brewer(\"Hiroshige\"), 1), text_size =4,barwidth = 9, barheight = 0.5,legend_break = 1,legend_text_size=12, classified_value_var_label_size = 10) 6.2.4 We have modified the iris dataset to create these boxplots iris$Group 6.2.4 Parameter explanation data: The input data frame. value_var: The column containing the numerical values for the heatmap. classified_text_var: A categorical column whose levels will be used as text labels. classified_value_var: A categorical column; for each level, the corresponding value from value_var will be displayed as a label. heatmap_color: The color palette for the heatmap fill. Default: alpha(met.brewer(\"Hiroshige\"), 1). text_size: The font size for the text labels. Default: 4. barwidth: The width of the color bar in the legend. Default: 9. barheight: The height of the color bar in the legend. Default: 0.5. legend_break: The interval between breaks on the color bar legend. Default: 1. legend_text_size: The font size for the legend's text labels. Default: 12. classified_value_var_label_size: The font size for the labels derived from the classified_value_var column. 6.2.5 Important Note You should manually adjust text_size and legend_text_size to best suit your specific data 6.3 BetterVis_Heatmap_Common The BetterVis_Heatmap_Common function is designed for a common use case: visualizing a simple, purely numerical matrix. 6.3.1 Data Input data(\"BetterVis_Heatmap_Common_example\",package=\"BetterVis\") 6.3.2 Simple Example BetterVis_Heatmap_Common(BetterVis_Heatmap_Common_example,trans=F) 6.3.3 Advanced Example BetterVis_Heatmap_Common(BetterVis_Heatmap_Common_example, trans = F, heatmap_color = met.brewer(\"Hiroshige\"),legend_break = 1, legend_position = \"top\", legend_title = \"\",legend_text_size = 8,legend_text_bold = T, x_text_size = 12,x_text_bold = T,x_text_angle = 90, y_text_size = 12,y_text_bold = T) #+guides(fill=\"none\") #+theme(axis.x.text=element_text(size=15) 6.3.4 Parameter explanation data: The input data frame. trans: A logical value (TRUE/FALSE) indicating whether to transpose the heatmap (swap the x and y axes). heatmap_color: The color palette for the heatmap fill. Default: met.brewer(\"Hiroshige\"). legend_position: The position of the legend (e.g., \"top\", \"right\"). Default: \"top\". legend_title: The title for the legend. Default: NULL. legend_break: The interval between breaks on the color bar legend. Default: 1. legend_text_size: The font size for the legend text. Default: 10. legend_text_bold: A logical value (TRUE/FALSE) to make the legend text bold. Default: TRUE. x_text_size: The font size for the x-axis text labels. Default: 12. x_text_bold: A logical value (TRUE/FALSE) to make the x-axis text labels bold. Default: TRUE. x_text_angle: The angle of the x-axis text labels. Default: 90. y_text_size: The font size for the y-axis text labels. Default: 12. y_text_bold: A logical value (TRUE/FALSE) to make the y-axis text labels bold. Default: TRUE. 6.4 BetterVis_Heatmap_Mantel The BetterVis_Heatmap_Mantel function is designed to explore the relationship between a numerical expression matrix and a dataset containing categorical variables, while simultaneously producing an advanced visualization of the analysis. Please ensure the vegan package is loaded before using this function. library(vegan) 6.4.1 Data Input expression_data 6.4.2 Simple Example BetterVis_Heatmap_Mantel(phenotype_data, expression_data, spec_select=c(\"stage\", \"age\", \"gender\", \"CA125\", \"CEA\", \"CA15.3\")) 6.4.3 Advanced Example BetterVis_Heatmap_Mantel(phenotype_data, expression_data, spec_select=c(\"stage\", \"age\", \"gender\", \"CA125\", \"CEA\", \"CA15.3\"), significant_symbol = TRUE,heatmap_color = brewer.pal(11, \"PuOr\"),line_size = c(0.5, 1, 2), line_color = color_pal(3),phenotype_text_size = 4)+ theme(legend.text = element_text(size=16),legend.title = element_text(size=18)) 6.4.4 Parameter explanation phenotype_data: The phenotype dataset, which is displayed alongside the heatmap. expression_data: The expression matrix used to generate the main heatmap. spec_select: A character vector specifying the columns from phenotype_data to associate with the expression matrix (e.g., c(\"stage\", \"age\", \"gender\", \"CA125\")). significant_symbol: A logical value (TRUE/FALSE) indicating whether to display significance symbols. Default: TRUE. heatmap_color: The color palette for the heatmap. Default: brewer.pal(11, \"PuOr\"). line_size: A vector to control the thickness of the association lines. line_color: A vector to control the color of the association lines. phenotype_text_size: The font size for the labels corresponding to the phenotype data rows. 6.5 BetterVis_Heatmap_Multi The BetterVis_Heatmap_Multi function provides a robust solution for annotating heatmaps with multiple categorical variables. While packages like ComplexHeatmap and pheatmap offer similar capabilities, they can present users with persistent bugs and challenging errors. BetterVis_Heatmap_Multi addresses these issues with an improved codebase, offering a more stable experience. 6.5.1 Data Input data(\"BetterVis_Heatmap_Multi_example\",package=\"BetterVis\") color_annotation 6.5.2 Usage Example BetterVis_Heatmap_Multi(df = BetterVis_Heatmap_Multi_example, x_var = \"case.ID\",number_vars = NULL, annotation_var = c(\"Metastasis_Status\",\"Tumor_Stage\",\"Treatment_Status\"), color_heatmap = met.brewer(\"Cassatt1\"),color_annotation = color_annotation, legend_heatmap_position = c(1.08,0.7),legend_annotation_position = c(1.22,-4), heatmap_plot_margin = unit(c(0, 4, -20, 0.5), \"cm\"), heatmap_theme = theme(axis.text.y = element_text(face=\"bold\")), annotation_theme =theme(axis.text.y = element_text(face=\"bold\"), legend.title =element_text(face=\"bold\"), legend.text =element_text(face=\"bold\") )) 6.5.3 We have modified the mtcars dataset to create these boxplots mtcars$Group 6.5.4 Parameter explanation df: The input data frame. x_var: The variable for the x-axis of the heatmap. number_vars: A character vector of column names for the numeric variables to include in the heatmap (e.g., c(\"number_col1\", \"number_col2\")). If NULL (the default), all numeric columns in df are automatically selected. annotation_var: A character vector of column names to be used for the annotation tracks (e.g., c(\"annotation_col1\", \"annotation_col2\")). color_heatmap: The color palette for the main heatmap. Default: met.brewer(\"Cassatt1\"). color_annotation: A list of color vectors for the annotation tracks. The number of elements in the list should be equal to the length of annotation_var (e.g., list(c(\"red\", \"blue\"), c(\"green\", \"orange\"))). legend_heatmap_position: The position of the main heatmap's color legend. Accepts character values (e.g., \"right\") or a numeric vector for precise coordinates (e.g., c(1.08, 0.7)). Default: \"right\". legend_annotation_position: The position for the annotation legends, specified as a numeric vector. Default: c(1.3, -4). heatmap_plot_margin: Adjusts the plot margins for the main heatmap, passed to plot.margin. Default: unit(c(0, 2, -20, 0.5), \"cm\"). heatmap_theme: A ggplot2 theme() object to further customize the style of the main heatmap. annotation_theme: A ggplot2 theme() object to further customize the style of the annotation plot. 6.5.5 Important Note Adjusting legend_heatmap_position and legend_annotation_position may be necessary to ensure the plot and all its legends are fully visible. If a legend is cut off or not fully displayed, we recommend increasing the value of the second argument in heatmap_plot_margin (which controls the right margin). For example, change unit(c(0, 2, -20, 0.5), \"cm\") to unit(c(0, 3, -20, 0.5), \"cm\"). Copyright (c) 2025 zyt all right reserved，powered by GitbookLast revised on： 2025-08-04 17:57:33 "},"Chapter7 Dotplot.html":{"url":"Chapter7 Dotplot.html","title":"Chapter 7: Dotplot","keywords":"","body":"Chapter 7 Dotplot At the Beginning BetterVis package must be loaded beforehand. library(BetterVis) library(MetBrewer) library(RColorBrewer) 7.1 BetterVis_DotPlot_Heatmap The BetterVis_DotPlot_Heatmap function combines a dot plot with elements of a heatmap to create a visualization that can convey more information. It is particularly useful for showing details such as the expression levels of multiple genes across various samples. 7.1.1 Data Input data(\"BetterVis_DotPlot_Heatmap_example\",package=\"BetterVis\") row_colors 7.1.2 Usage Example BetterVis_DotPlot_Heatmap(BetterVis_DotPlot_Heatmap_example,scale = F,col.min=0,col.max = 2,show.noexpr.dots = T, data.colors = c(\"#1289B2\",\"#FCF6AF\",\"#E53849\"), dots.size = 3,dots.type = \"square root\",inner.border =F, cluster.features=F,cluster.idents = F,idents.kmeans = 1,features.kmeans = 1, row.names.side = \"right\",idents.names.size = 10, column.names.side = \"top\",column.names.angle=45,features.names.size = 10, right.annotation = F,bottom.annotation = F,top.annotation = T, row_annotation_color = row_colors,col_annotation_color =col_colors , show.data.legend = T,row_annotation_legend = T,row_annotation_legend_title = \"Rows\", col_annotation_legend = T,col_annotation_legend_title = \"Cols\", zscore.legend = T,zscore.legend.side = \"bottom\", legend.title.size = 10,legend.text.size = 10, row.split =c(1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5), col.split =c(4,4,4,5,3,1,1,1,1,1,2,5,2), keep_rownames_order = T,border_gp_control = F) 7.1.4 Parameter explanation data_matrix: The input matrix. scale: A logical value (TRUE/FALSE) indicating whether to scale the matrix (e.g., to z-scores). rescale: A logical value (TRUE/FALSE) indicating whether to rescale the data. rescale.range: The range for rescaling the data (e.g., c(0, 1)). dotplot: A logical value (TRUE/FALSE). If TRUE, creates a dot plot; otherwise, creates a standard square heatmap. dots.type: The type of dot plot scaling. Accepts \"square root\" or \"radius\". Default: \"square root\". dots.size: The size of the dots. show.noexpr.dots: A logical value (TRUE/FALSE) indicating whether to display dots for zero-expression values. col.min: The minimum value for the color scale range. col.max: The maximum value for the color scale range. data.colors: The color palette for the heatmap/dots. palette.reverse: A logical value (TRUE/FALSE) indicating whether to reverse the color palette. na.color: The color to use for NA (missing) values. background.color: The background color of the plot. order.idents: A logical value (TRUE/FALSE) indicating whether to order the identities (rows) by name. Default: TRUE. order.colors: A logical value (TRUE/FALSE). If TRUE, automatically orders colors based on order.idents. Default: TRUE. kmeans.repeats: The number of runs to perform for consistent K-means clustering. cluster.idents: A logical value (TRUE/FALSE) indicating whether to cluster the identities (rows). Default: TRUE. idents.kmeans: The number of k-means slices (clusters) for row clustering. idents.kmeans.numbers.size: The font size for the numbers labeling the row k-means slices. cluster.features: A logical value (TRUE/FALSE) indicating whether to cluster the features (columns). features.kmeans: The number of k-means slices (clusters) for column clustering. features.kmeans.numbers.size: The font size for the numbers labeling the column k-means slices. idents.gap: The gap between identity (row) slices. Effective when idents.kmeans > 1. features.gap: The gap between feature (column) slices. Effective when features.kmeans > 1. idents.names.size: The font size for the row names. features.names.size: The font size for the column names. features.names.style: The font style for the column names (e.g., \"italic\", \"bold\"). Default: \"italic\". row.names.side: The position of the row names. Default: \"left\". column.names.angle: The angle of the column names. Default: 45. column.names.side: The position of the column names. Default: \"bottom\". inner.border: A logical value (TRUE/FALSE) indicating whether to draw a border around the dots. Default: TRUE. data.legend.name: The title for the main data legend (e.g., \"z-score\"). show.data.legend: A logical value (TRUE/FALSE) to show or hide the main data legend. Default: TRUE. legend.title.size: The font size for the legend titles. legend.text.size: The font size for the legend item text. legend.gap: The gap between legends. row_annotation_color: The colors for the row annotation bar. row_annotation_legend: The title for the row annotation legend. row.split: A vector or factor used to split the rows. col.split: A vector or factor used to split the columns. border_gp_control: A logical value (TRUE/FALSE) or graphics parameters (gpar) to control the main border. right.annotation: A logical value (TRUE/FALSE) or an annotation object for the right side of the heatmap. bottom.annotation: An annotation object for the bottom of the heatmap. top.annotation: An annotation object for the top of the heatmap. keep_rownames_order: A logical value (TRUE/FALSE). If TRUE, forces the rows to be displayed in their original matrix order. zscore.legend: A logical value (TRUE/FALSE) to show or hide the z-score legend. zscore.legend.side: The position of the z-score legend. Default: \"bottom\". zscore.legend.direction: The direction of the z-score legend. Default: \"horizontal\". zscore.legend.position: The position of the z-score legend's title. Default: \"topcenter\". zscore.legend.width: The width of the z-score legend. Default: 0.5. col_annotation_legend: A logical value (TRUE/FALSE) to show or hide the column annotation legend. col_annotation_color: The colors for the column annotation. col_annotation_legend_title: The title for the column annotation legend. row_annotation_legend_title: The title for the row annotation legend. 7.1.5 Important Note As this is a complex function, we recommend specifying most parameters explicitly for the best results, rather than relying on a simplified function call. Please note that the input data for this function is required to be in a matrix format. The number of elements in the row.split and col.split vectors must match the number of rows and columns in the input matrix, respectively. 7.2 BetterVis_Dotplot_Beeswarm The BetterVis_Dotplot_Beeswarm function provides a convenient way to create beeswarm plots. This type of visualization is a variation of a dot plot that intelligently arranges points side-by-side to minimize overlap, and our function builds upon the ggbeeswarm package to simplify this process. 7.2.1 Data Input data(\"BetterVis_Dotplot_Beeswarm_example\",package=\"BetterVis\") 7.2.2 Simple Example BetterVis_Dotplot_Beeswarm(data = data, x_var = \"Patient_Group\", y_var = \"Biomarker_Min\", color = c(\"#68d0ce\", \"#f4a4c9\", \"#4955d0\", \"#e09a2a\", \"#de6a73\",\"firebrick\"), ylim =c(0,200),y_break = 50, comparison_col = \"Patient_Group\",comparison_group = c(c(\"Healthy Control\",\"Early\"),c(\"Early\",\"Late\"),c(\"Middle\",\"Late\")),comparison_method = \"t.test\") 7.2.3 Advanced Example BetterVis_Dotplot_Beeswarm(data = data, x_var = \"Patient_Group\", y_var = \"Biomarker_Min\", color = c(\"#68d0ce\", \"#f4a4c9\", \"#4955d0\", \"#e09a2a\", \"#de6a73\"), ylim =c(0,200),y_break = 50, point_size = 2,point_alpha = 0.6, median_bar = T,border=T, title = \"You can write title here\",x_title = \"Species\",y_title = \"Sepal.Width\", sig_symbol = T,sig_type=\"NUMBER\", comparison_col = \"Patient_Group\",comparison_group = c(c(\"Healthy Control\",\"Early\"),c(\"Early\",\"Late\"),c(\"Middle\",\"Late\")),comparison_method = \"t.test\") ## +theme(axis.text.x = element_text(size=18)) 7.2.4 We have modified the iris dataset to create these boxplots iris 7.2.5 Parameter explanation data: The input data frame. x_var: The name of the variable for the x-axis. y_var: The name of the variable for the y-axis. color: A vector of colors for the levels of the x-axis variable. Default: c(\"#68d0ce\", \"#f4a4c9\", \"#4955d0\", \"#e09a2a\", \"#de6a73\"). ylim: A numeric vector of length 2 to set the y-axis range. Default: c(0, 1). y_break: The interval between breaks (tick marks) on the y-axis. Default: 0.1. point_size: A numeric value to control the size of the points. Default: 2. point_alpha: The transparency (alpha) of the points. Default: 0.6. median_bar: A logical value (TRUE/FALSE) indicating whether to add a bar for the median within each group. Default: TRUE. border: A logical value (TRUE/FALSE) indicating whether to add a border around the plot panel. Default: TRUE. title: The main title for the plot. Default: NULL. x_title: The title for the x-axis. Default: NULL. y_title: The title for the y-axis. Default: NULL. sig_symbol: A logical value (TRUE/FALSE) indicating whether to display significance comparisons. sig_type: The type of significance marker to display. Accepts \"SYMBOL\" (for asterisks) or \"NUMBER\" (for p-values). Default: \"SYMBOL\". comparison_col: The name of the column to use for significance comparisons. Default: NULL. comparison_group: A list specifying the groups to compare (e.g., list(c(\"setosa\", \"versicolor\"), c(\"versicolor\", \"virginica\"))). comparison_method: The statistical method for significance comparisons (e.g., \"wilcox\", \"t.test\"). Default: \"wilcox\". 7.2.6 Important Note It is important to set the ylim and y_break parameters appropriately. You should adjust these values based on the minimum and maximum values of your input data to ensure the plot is displayed correctly. Pay close attention to the format for specifying comparison groups. For multiple pairwise comparisons, the input must be a list of vectors, for example: list(c(\"setosa\", \"versicolor\"), c(\"versicolor\", \"virginica\")). 7.3 BetterVis_Dotplot_Mixbar This function enhances a standard grouped dot plot by adding marginal bar charts that show frequency distributions for the data, making the visualization richer and more informative. For a simpler dot plot without these marginal charts, we recommend setting Mixbar = F. 7.3.1 Data Input data(\"BetterVis_Dotplot_Mixbar_example\",package=\"BetterVis\") 7.3.2 Simple Example BetterVis_Dotplot_Mixbar(df = BetterVis_Dotplot_Mixbar_example, x_var = \"bill_length_mm\", y_var = \"bill_depth_mm\", classified_var = \"species\", size_var = \"body_mass_g\", color = c(\"#FBA72A\", \"#78B7C5\", \"#7294D4\"), x_title = \"Bill Length\", y_title = \"Bill Depth\") 7.3.3 Advanced Example BetterVis_Dotplot_Mixbar(df = BetterVis_Dotplot_Mixbar_example, x_var = \"bill_length_mm\", y_var = \"bill_depth_mm\", classified_var = \"species\", size_var = \"body_mass_g\",color =c(\"#FBA72A\", \"#78B7C5\", \"#7294D4\"), point_shape = 16, point_size = 4, error_bar = T,errorbar_width = 0.6, errorbar_size = 1, legend = F, title = \"\", x_title = \"Bill Length\", y_title = \"Bill Depth\", legend_title = \"Species\", theme_custom =theme(axis.title.x = element_text(size = 15)), guides_custom=guides(color=\"none\",fill=\"none\"),Mixbar = T) 7.3.4 Parameter explanation df: The input data frame. x_var: The column name for the continuous variable on the x-axis. y_var: The column name for the continuous variable on the y-axis. classified_var: The variable used to classify the points, which also controls the fill color. size_var: The variable that controls the size of the points. If set, point size will be scaled based on this variable's values. Default: NULL. color: A vector of colors for the fills defined by classified_var. Default: c(\"#FBA72A\", \"#78B7C5\", \"#7294D4\"). point_shape: The shape of the points. Default: 21. point_size: The size of the points. Default: 3. errorbar: A logical value (TRUE/FALSE) indicating whether to display error bars. Default: TRUE. errorbar_width: The width of the error bars. Default: 0.5. errorbar_size: The line thickness of the error bars. Default: 0.8. legend: A logical value (TRUE/FALSE) indicating whether to display the legend. Default: FALSE. title: The main title for the plot. Default: NULL. x_title: The title for the x-axis. Default: NULL. y_title: The title for the y-axis. Default: NULL. legend_title: The title for the legend. Default: NULL. theme_custom: A ggplot2 theme() object for further customization. Default: NULL. guides_custom: A ggplot2 guides() object for further legend customization. Default: NULL. Mixbar: A logical value (TRUE/FALSE) indicating whether to display a bar plot component. Default: TRUE. 7.3.5 Important Note If the size_var parameter is not set, all points will be drawn with a uniform size. However, the x_var, y_var, and classified_var parameters are required and must be specified. 7.4 BetterVis_Dotplot_Multifacet We have streamlined the creation of advanced visualizations for both standard (single) and faceted dot plots. 7.4.1 Data Input data(\"BetterVis_Dotplot_Multifacet_example\",package=\"BetterVis\") 7.4.2 Simple Example BetterVis_Dotplot_Multifacet(df = BetterVis_Dotplot_Multifacet_example, classified_var = \"Species\",color = c(\"#BEBADA\", \"#80B1D3\", \"#FDB462\",\"#FB8072\"),ncol = 3) 7.4.3 Advanced Example BetterVis_Dotplot_Multifacet( df = data, classified_var = \"Species\", color = c(\"#BEBADA\", \"#80B1D3\", \"#FDB462\",\"#FB8072\"), ncol = 3,subset_display = c(1,2,3,4,5,6), strokeSize = 0.2, pointSize = 3, strokeColor = 'gray30',alpha = 0.6, legend_title = \"Species\",legend_title_size = 12,legend_text_size = 12, x_text_angle = 0,x_text_size = 12,x_title_size = 12, y_text_size = 12,y_title_size = 12, theme_custom = theme(axis.text = element_text(face=\"bold\")), guides_custom = NULL) 7.4.4 We have modified the Cars93 dataset to create these boxplots library(MASS) Cars93%dplyr::select(Type:MPG.highway) BetterVis_Dotplot_Multifacet( df = Cars93, classified_var = \"Type\", color = c(\"#BEBADA\", \"#80B1D3\", \"#FDB462\",\"#FB8072\",\"#8DD3C7\",\"#BC80BD\"), ncol = 5, strokeSize = 0.2, pointSize = 3, strokeColor = 'gray30',alpha = 0.6, legend_title = \"Species\",legend_title_size = 12,legend_text_size = 12, x_text_angle = 0,x_text_size = 12,x_title_size = 12, y_text_size = 12,y_title_size = 12, theme_custom = theme(axis.text = element_text(face=\"bold\")), guides_custom = NULL) 7.4.5 Parameter explanation df: The input data frame. classified_var: The variable used to classify the points, which also controls the fill color. color: A vector of colors for the fills defined by classified_var. Default: c(\"#FBA72A\", \"#78B7C5\", \"#7294D4\"). ncol: The number of columns to use for the faceted plot layout. Default: 3. subset_display: A numeric vector specifying which facets to display (e.g., c(1, 2, 3)). strokeSize: The thickness of the border around the points. Default: 0.2. point_size: The size of the points. Default: 3. strokeColor: The color of the border around the points. Default: \"gray30\". alpha: The transparency of the points. Default: 0.6. legend_title: The title for the legend. Default: NULL. legend_title_size: The font size for the legend title. Default: 14. legend_text_size: The font size for the legend item text. Default: 12. x_text_angle: The angle of the x-axis text labels. Default: 0. x_text_size: The font size for the x-axis text labels. Default: 12. y_text_size: The font size for the y-axis text labels. Default: 12. x_title_size: The font size for the x-axis title. Default: 14. y_title_size: The font size for the y-axis title. Default: 14. theme_custom: A ggplot2 theme() object for further customization. guides_custom: A ggplot2 guides() object for further legend customization. 7.4.6 Important Note The BetterVis_Dotplot_Multifacet function will generate a plot for every numeric variable in the input data frame. To display only a specific selection of these plots, use the subset_display parameter. The ncol and color parameters are important and should be set according to the number of columns (i.e., the number of plots) you intend to display. 7.5 BetterVis_Dotplot_Smoothline For correlation and regression analyses, a scatter plot with a fitted line is a frequently used and essential visualization method. 7.5.1 Data Input data(\"BetterVis_Dotplot_Smoothline_example\",package=\"BetterVis\") BetterVis_Dotplot_Smoothline_example2 7.5.2 Simple Example BetterVis_Dotplot_Smoothline(data = BetterVis_Dotplot_Smoothline_example, x_var = \"Sepal.Width\", y_var = \"Sepal.Length\", classified_var = \"Species\", size_var = \"Sepal.Length\", color = c(\"#FBA72A\", \"#78B7C5\", \"#7294D4\"),cor_position = c(3.7, 3.5)) 7.5.3 Advanced Example BetterVis_Dotplot_Smoothline(data = BetterVis_Dotplot_Smoothline_example, x_var = \"Sepal.Width\", y_var = \"Sepal.Length\", classified_var = \"Species\", size_var = \"Sepal.Length\", color = c(\"#BEBADA\", \"#80B1D3\", \"#FDB462\"), point_size = 15, smoothline = TRUE, smoothline_width = 2, smoothline_color = \"#FB8072\", cor_test = TRUE, cor_method = \"spearman\", cor_color = \"black\", cor_position = c(2, 4), title = \"Title\", x_title = \"Sepal.Width \", y_title = \"Sepal.Length\", legend = TRUE, legend_position = \"right\", global_size_adjust = 1) ##+facet_wrap(vars(Species),drop = TRUE) 7.5.4 We have generated a new dataset to verify its validity BetterVis_Dotplot_Smoothline(data = data2, x_var = \"Blood_Pressure\", y_var = \"Cholesterol_Level\", classified_var = \"Patient_Group\", size_var = \"Blood_Pressure\", color = c(\"#FBA72A\", \"#78B7C5\", \"#7294D4\"), cor_position = c(90,300)) BetterVis_Dotplot_Smoothline(data = BetterVis_Dotplot_Smoothline_example2, x_var = \"Blood_Pressure\", y_var = \"Cholesterol_Level\", classified_var = \"Patient_Group\", size_var = \"Blood_Pressure\", color = c(\"#BEBADA\", \"#80B1D3\", \"#FDB462\"), point_size = 15, smoothline = TRUE, smoothline_width = 2, smoothline_color = \"#FB8072\", cor_test = TRUE, cor_method = \"spearman\", cor_color = \"black\", cor_position = c(90,300), title = \"Title\", x_title = \"Blood_Pressure \", y_title = \"Cholesterol_Level\", legend = TRUE, legend_position = \"right\", global_size_adjust = 1) ##+facet_wrap(vars(Species),drop = TRUE) 7.5.5 Parameter explanation data: The input data frame. x_var: The column name for the continuous variable on the x-axis. y_var: The column name for the continuous variable on the y-axis. classified_var: The variable used to classify the points, which also controls the fill color. size_var: The variable that controls the size of the points. If set, point size will be scaled based on this variable's values. Default: NULL. color: A vector of colors for the fills defined by classified_var. Default: c(\"#FBA72A\", \"#78B7C5\", \"#7294D4\"). point_size: The base size of the points. Default: 3. smoothline: A logical value (TRUE/FALSE) indicating whether to display the fitted regression line. Default: TRUE. smoothline_width: The width of the fitted line. Default: 2. smoothline_color: The color of the fitted line. Default: \"#FB8072\". cor_test: A logical value (TRUE/FALSE) indicating whether to display the correlation coefficient and p-value. Default: TRUE. cor_method: The method for the correlation test (e.g., \"spearman\", \"pearson\"). Default: \"spearman\". cor_color: The color for the text and border of the correlation test results. Default: \"black\". cor_position: A numeric vector of length 2 specifying the x and y coordinates for the correlation test box. Default: c(3.7, 3.5). title: The main title for the plot. Default: NULL. x_title: The title for the x-axis. Default: NULL. y_title: The title for the y-axis. Default: NULL. legend: A logical value (TRUE/FALSE) indicating whether to display the legend. Default: TRUE. legend_position: The position of the legend (e.g., \"right\", \"bottom\"). Default: \"right\". global_size_adjust: A global size adjustment factor for all text elements. Values greater than 1 will enlarge the text, and values less than 1 will shrink it. Default: 1. 7.5.6Important Note If the size_var parameter is not set, all points will be drawn with a uniform size. However, the x_var, y_var, and classified_var parameters are required and must be specified. Adjusting the cor_position parameter is important. You may need to fine-tune its coordinates to place the correlation results in a suitable location on your plot. 7.6 BetterVis_Dotplot_Ternary While not as common as other types of scatter plots, the ternary plot is the ideal choice for visualizing the proportional relationship between three variables. 7.6.1 Data Input data(\"BetterVis_Dotplot_Ternary_example\",package=\"BetterVis\") 7.6.2 Simple Example BetterVis_Dotplot_Ternary(data = BetterVis_Dotplot_Ternary_example,x_var = \"x\",y_var = \"y\",z_var = \"z\",size_var = \"size\", color = MetBrewer::met.brewer(\"Hiroshige\"),all_text_adjust = 1.5) 7.6.3 Advanced Example BetterVis_Dotplot_Ternary(data = BetterVis_Dotplot_Ternary_example,x_var = \"x\",y_var = \"y\",z_var = \"z\",size_var = \"size\", color = MetBrewer::met.brewer(\"Hiroshige\"), point_size = 3,point_alpha = 0.6, border_size = 1.2,border_color = c(\"#68d0ce\", \"#e09a2a\", \"#de6a73\"), legend = T, all_text_adjust = 1.3, title = \"Title\",subtitle = \"Sub_Title\",x_title = \"X_Title\",y_title = \"Y_Title\",z_title = \"Z_Title\") ###+theme(plot.title = element_text(size=20)) 7.6.4 Parameter explanation data: The input data frame. x_var: The name of the variable for the 'x' component/axis. y_var: The name of the variable for the 'y' component/axis. z_var: The name of the variable for the 'z' component/axis. size_var: The name of the column used to control the size of the points. color: The color(s) for the points. If size_var is used, this should be a color palette. If size_var is not used, this should be a single color value. Default: met.brewer(\"Hiroshige\"). point_size: The base size of the points. Default: 3. point_alpha: The transparency (alpha) of the points. Default: 0.6. border_size: The thickness of the plot's border and axis lines. Default: 1.2. border_color: The colors for the plot's border and axis lines. Default: c(\"#68d0ce\", \"#e09a2a\", \"#de6a73\"). legend: A logical value (TRUE/FALSE) indicating whether to display the legend. Default: TRUE. all_text_adjust: A global adjustment factor for all text sizes. Values less than 1 will shrink text, and values greater than 1 will enlarge it. Default: 1. title: The main title for the plot. Default: NULL. subtitle: The subtitle for the plot. Default: NULL. x_title: The title for the 'x' axis. Default: NULL. y_title: The title for the 'y' axis. Default: NULL. z_title: The title for the 'z' axis. Default: NULL. 7.6.5 Important Note If size_var is specified, point_size acts as a scaling factor for the relative point sizes. If size_var is not used, point_size sets a single, uniform size for all points. The all_text_adjust parameter can be used to scale the global font size, which is useful for adapting the plot to different output dimensions or contexts. Copyright (c) 2025 zyt all right reserved，powered by GitbookLast revised on： 2025-08-04 18:14:05 "},"Chapter8 Ridgeline.html":{"url":"Chapter8 Ridgeline.html","title":"Chapter 8: Ridgeline Plot","keywords":"","body":"Chapter 8 Ridgeline Plot At the Beginning BetterVis package must be loaded beforehand. library(BetterVis) 8.1 BetterVis_Ridgeline_Single A ridgeline plot is an ideal choice for visualizing and comparing the distribution of a variable across multiple categories. 8.1.1 Data Input data(\"BetterVis_Ridgeline_Single_example\",package=\"BetterVis\") sampleColor 8.1.2 Simple Example BetterVis_Ridgeline_Single( data = BetterVis_Ridgeline_Single_example,x_var = \"CytoTRACEScore\",y_var = \"patient\",color = sampleColor, annotation = T,annotation_var = \"mutationGroup\",color_annotation_var = c(\"#68d0ce\", \"#f4a4c9\", \"#e09a2a\", \"#de6a73\")) 8.1.3 Advanced Example BetterVis_Ridgeline_Single( data = BetterVis_Ridgeline_Single_example,x_var = \"CytoTRACEScore\",y_var = \"patient\",color = sampleColor, annotation = T,annotation_var = \"mutationGroup\",color_annotation_var = c(\"#68d0ce\", \"#f4a4c9\", \"#e09a2a\", \"#de6a73\"), arrow = T, arrow_x1 = c(0.88, 0.12),arrow_x2 = c(1.12, -0.12),arrow_y1 = c(0.5, 0.5),arrow_y2 = c(0.5, 0.5),arrow_width = 0.6, arrow_text_left = \"Left\",arrow_text_middle = \"Middle\",arrow_text_right = \"Right\", all_text_adjust = 1,combined_width=c(1.5, 0.8) ) 8.1.4 Parameter explanation data: The input dataset. x_var: The grouping variable for the x-axis. y_var: The numerical variable for the y-axis. color: A vector of colors for the ridgeline fills. The length should match the number of levels in the x_var factor (e.g., c(\"#FC5D5C\", \"#4B6A9D\", \"#167D7D\")). annotation: A logical value (TRUE/FALSE) indicating whether to add a categorical annotation dot plot. Default: TRUE. annotation_var: The column name of the categorical variable to be used for the annotation plot. Default: NULL. color_annotation_var: A vector of colors for the annotation dot plot. Default: c(\"#68d0ce\", \"#f4a4c9\", \"#4955d0\", \"#e09a2a\", \"#de6a73\"). arrow: A logical value (TRUE/FALSE) indicating whether to display arrows. Default: TRUE. arrow_x1: A numeric vector specifying the x-axis range for the first arrow's span (e.g., c(0.35, 0.2)). arrow_x2: A numeric vector specifying the x-axis range for the second arrow's span (e.g., c(0.48, 0.63)). arrow_y1: A numeric vector specifying the y-axis range for the first arrow's span (e.g., c(0.88, 0.88)). arrow_y2: A numeric vector specifying the y-axis range for the second arrow's span (e.g., c(0.88, 0.88)). arrow_width: A numeric value for the thickness of the arrows. Default: 0.6. arrow_text_left: The text to accompany the left arrow. Default: NULL. arrow_text_middle: The text to be placed between the two arrows. Default: NULL. arrow_text_right: The text to accompany the right arrow. Default: NULL. all_text_adjust: A numeric value to globally adjust font sizes. A value of 1 means no change, values >1 will enlarge text, and values combined_width: A numeric vector specifying the relative widths of the ridgeline plot and the annotation plot. Default: c(1.5, 0.8). 8.1.5 Important Note To add arrows and text annotations, you will need to manually fine-tune the position and size parameters (e.g., arrow_x1, arrow_x2, arrow_y1, arrow_y2, arrow_width, etc.) to achieve the correct placement.\" 8.2 BetterVis_Ridgeline_Facet To expand the use cases for ridgeline plots, we have developed a dedicated function specifically for creating faceted versions. 8.2.1 Data Input data(\"BetterVis_Ridgeline_Facet_example\",package=\"BetterVis\") sampleColor 8.2.2 Simple Example BetterVis_Ridgeline_Facet( data = BetterVis_Ridgeline_Facet_example,x_var = \"CytoTRACEScore\",y_var = \"patient\",facet_var = \"smoking1\",annotation_var = \"mutationGroup\", color = sampleColor) 8.2.3 Advanced Example BetterVis_Ridgeline_Facet( data = BetterVis_Ridgeline_Facet_example,x_var = \"CytoTRACEScore\",y_var = \"patient\", facet_var = \"Group\",nrow = 2,ncol = 3, color = sampleColor, annotation = T,annotation_var = \"mutationGroup\",color_annotation_var = c(\"#68d0ce\", \"#f4a4c9\", \"#4955d0\", \"#e09a2a\", \"#de6a73\"), all_text_adjust = 1.1, combined_width = c(1.5, 0.8)) 8.2.4 Paraeter explanation data: The input dataset. x_var: The grouping variable for the x-axis. y_var: The numerical variable for the y-axis. facet_var: The column name of the categorical variable to use for faceting. nrow: The number of rows in the facet layout. Default: NULL. ncol: The number of columns in the facet layout. Default: NULL. color: A vector of colors for the ridgeline fills. The length should match the number of levels in the x_var factor (e.g., c(\"#FC5D5C\", \"#4B6A9D\", \"#167D7D\")). annotation: A logical value (TRUE/FALSE) indicating whether to add a categorical annotation dot plot. Default: TRUE. annotation_var: The column name of the categorical variable to be used for the annotation plot. Default: NULL. color_annotation_var: A vector of colors for the annotation dot plot. Default: c(\"#68d0ce\", \"#f4a4c9\", \"#4955d0\", \"#e09a2a\", \"#de6a73\"). all_text_adjust: A numeric value to globally adjust font sizes. A value of 1 means no change, values >1 will enlarge text, and values combined_width: A numeric vector specifying the relative widths of the ridgeline plot and the annotation plot. Default: c(1.5, 0.8). 8.2.5 Important Note The all_text_adjust parameter can be used to adjust the global size of all text elements. Copyright (c) 2025 zyt all right reserved，powered by GitbookLast revised on： 2025-08-04 18:26:36 "},"Chapter9 Sankey Plot.html":{"url":"Chapter9 Sankey Plot.html","title":"Chapter 9: Sankey Plot","keywords":"","body":"Chapter 9 Sankey Plot At the Beginning BetterVis package must be loaded beforehand. library(BetterVis) 9.1 BetterVis_Sankey_Single For visualizing data flow, a Sankey diagram is the ideal choice. We have streamlined the process of creating advanced Sankey diagrams by consolidating various visualization methods into this function. 9.1.1 Data Input data(\"BetterVis_Sankey_Single_example\",package=\"BetterVis\") sankey_colors 9.1.2 Simple Example BetterVis_Sankey_Single(data=data,sankey_color = sankey_colors) 9.1.3 Advanced Example BetterVis_Sankey_Single(data=BetterVis_Sankey_Single_example,sankey_alpha = 0.6,sankey_width = 0.4,border_color = \"grey30\", sankey_text_size = 4,sankey_text_hjust = 0.5,sankey_text_vjust = 0.5, bottom_text_size = 18,bottom_text_color = \"grey30\", title = \"Sankey Plot\",title_size = 18, text_adjust_global = 1, sankey_color = sankey_colors) 9.1.4Parameter explanation data: The input data frame, containing the columns required for the Sankey diagram. sankey_alpha: The transparency (alpha) of the Sankey diagram's connecting flows (links). sankey_width: The width of the Sankey diagram's nodes (the rectangular blocks). border_color: The border color for the Sankey diagram's nodes. sankey_text_size: The font size for the text inside the Sankey nodes. sankey_text_hjust: Horizontal adjustment for the text inside the Sankey nodes. Default: 0.5. sankey_text_vjust: Vertical adjustment for the text inside the Sankey nodes. Default: 0.5. bottom_text_size: The font size for the column labels at the bottom of the plot. bottom_text_color: The color of the column labels at the bottom of the plot. title: The content for the main plot title. title_size: The font size for the main title. text_adjust_globol: A numeric value to globally adjust all font sizes. A value of 1 means no change, values >1 will enlarge text, and values 1. sankey_color: The colors for the Sankey diagram's nodes. 9.1.5 Important Note The text_adjust_global parameter can be used to adjust the global size of all text elements. Copyright (c) 2025 zyt all right reserved，powered by GitbookLast revised on： 2025-08-04 18:26:44 "},"Chapter10 Venn Plot.html":{"url":"Chapter10 Venn Plot.html","title":"Chapter 10: Venn Plot","keywords":"","body":"Chapter 10 Venn Plot At the Beginning BetterVis package must be loaded beforehand. library(BetterVis) 10.1 BetterVis_Venn_UpsetR While traditional Venn diagrams using overlapping circles are common, they become difficult to read with many sets. Here, we present a more unique and powerful method for visualizing multi-set intersections using the UpSetR package to create UpSet plots 10.1.1 Data Input data(\"BetterVis_Venn_UpsetR_example\",package=\"BetterVis\") 10.1.2 Simple Example BetterVis_Venn_UpsetR(listInput,all_text_adjust = 2) BetterVis_Venn_UpsetR(listInput, all_text_adjust = c(2, 2, 1.5, 2, 2, 2)) 10.1.3 Advanced Example BetterVis_Venn_UpsetR(listInput,ratio = c(0.7,0.3), y.label = \"Intersection size\",x.label = \"Set Size\", main.bar.color = \"#FCB2AF\",sets.bar.color = \"#9BDFDF\",matrix.color = \"#8C9FCA\", point.size = 3,line.size=1, all_text_adjust = 2) 10.1.4 Parameter explanation input_list: A list containing the sets for which to find intersections. ratio: A numeric vector specifying the size ratios for the main bar plot (intersections), the set size bar plot, and the dot matrix. y.label: The title for the y-axis. Default: \"Intersection Size\". x.label: The title for the x-axis. Default: \"Set Size\". main.bar.color: The color for the main bar plot (representing intersection sizes). Default: \"#FCB2AF\". sets.bar.color: The color for the set size bar plot. Default: \"#9BDFDF\". matrix.color: The color for the points and lines in the intersection matrix. Default: \"#8C9FCA\". point.size: The size of the points in the matrix. Default: 3. line.size: The thickness of the lines in the matrix. Default: 1. all_text_adjust: A single numeric value to globally adjust all text sizes (Default: 2), or a numeric vector of length 6 to individually control the font sizes for: [1] intersection size title, [2] intersection size axis labels, [3] set size title, [4] set size axis labels, [5] set names, and [6] the numbers above the intersection bars (e.g., c(2, 2, 1.5, 2, 2, 2)). 10.1.5 Important Note Pay attention to the ratio parameter, as it controls the relative proportions of the main bar plot (intersections), the set size plot, and the dot matrix. The all_text_adjust parameter can be used to scale all text elements; note that it accepts two different input formats: a single numeric value for global scaling, or a vector of six values for individual control. Copyright (c) 2025 zyt all right reserved，powered by GitbookLast revised on： 2025-08-04 18:26:52 "},"Chapter11 Circos.html":{"url":"Chapter11 Circos.html","title":"Chapter 11: Circos Plot","keywords":"","body":"Chapter 11 Circos At the Beginning BetterVis package must be loaded beforehand. library(BetterVis) 11.1 BetterVis_Circos_Interaction Circos plots are powerful because they not only show categorical information about variables (such as genes), but also visualize the strength of the interactions between them. 11.1.1 Data Input df_sample 11.1.2 Usage Example1 BetterVis_Circos_Interaction( df = df_sample, interaction_data = interaction_data_sample, main_col = \"ID_Gene\", main_col_color_classify = \"type_main\", col1_name = \"type_col1\", col2_name = \"type_col2\", #col3_name = \"type_main\", main_col_color = my_main_col_color, color1 = my_color1, color2 = my_color2, #color3 = my_color3, link_source_col = \"ID\", link_target_col = \"Gene\", link_value_col = \"Correlation\", link_pvalue_col = \"Pvalue\" , main_col_text = T,col1_text = T,col2_text = T,col3_text = T ) 11.1.3 Usage Example2 BetterVis_Circos_Interaction( df = df_sample, main_col = \"ID_Gene\", main_col_color_classify = \"type_main\", col1_name = \"type_col1\", col2_name = \"type_col2\", #col3_name = \"type_main\", main_col_color = my_main_col_color, color1 = my_color1, color2 = my_color2, #color3 = my_color3, main_col_text = T,col1_text = T,col2_text = T,col3_text = T ) 11.1.4 Parameter explanation df: The input data frame containing data for the main sectors and other categorical variables. interaction_data: A data frame that defines the relationships (links) between the main sectors. main_col: The column name for the main sectors. main_col_color_classify: A column name used to group and assign colors to the main sectors. col1_name: The column name for the inner ring/track. col2_name: The column name for the middle ring/track (optional). col3_name: The column name for the outer ring/track (optional). main_col_color: A vector of colors for the main sectors. color1: A vector of colors for the inner ring. color2: A vector of colors for the middle ring (optional). color3: A vector of colors for the outer ring (optional). link_source_col: The column in interaction_data that specifies the source of the links. link_target_col: The column in interaction_data that specifies the target of the links. link_value_col: The column in interaction_data containing the correlation coefficient or value for the links. link_pvalue_col: The column in interaction_data containing the p-values for the links. main_col_text: A logical value (TRUE/FALSE) indicating whether to display the labels for the main sectors. col1_text: A logical value (TRUE/FALSE) indicating whether to display the labels for the inner ring. col2_text: A logical value (TRUE/FALSE) indicating whether to display the labels for the middle ring. col3_text: A logical value (TRUE/FALSE) indicating whether to display the labels for the outer ring. 11.1.5 Important Note The col2_name and col3_name parameters, along with their corresponding color settings (color2, color3), are optional. This allows you to control whether the plot displays one, two, or three annotation rings. If you do not have interaction data for the main sectors (i.e., you don't want to show links), the interaction_data, link_source_col, link_target_col, link_value_col, and link_pvalue_col parameters can be omitted. 11.2 BetterVis_Circos_Ringplot 11.2.1 Data Input data(\"BetterVis_Circos_Ringplot_example\",package=\"BetterVis\") 11.2.2 Usage Example BetterVis_Circos_Ringplot(data = df, root = \"Cough\", color = NULL) 11.2.3 Parameter explanation data: The input dataset or data frame. root: A string to add a top-level root node to the hierarchical data. color: Controls the color of the plot elements. . Copyright (c) 2025 zyt all right reserved，powered by GitbookLast revised on： 2025-08-04 18:21:35 "},"Chapter12 LinePlot.html":{"url":"Chapter12 LinePlot.html","title":"Chapter 12: Line Plot","keywords":"","body":"Chapter 12 Line Plot At the Beginning BetterVis package must be loaded beforehand. library(BetterVis) 12.1 BetterVis_LinePlot_Chart The BetterVis_LinePlot_Chart function addresses the fundamental need for creating both standard and faceted line plots. It is designed to produce publication-quality graphics with little to no modification required 12.1.1 Data Input BetterVis_LinePlot_Chart_example 12.1.2 Simple Example BetterVis_LinePlot_Chart ( df = BetterVis_LinePlot_Chart_example, x_var = \"Time\",y_var = \"value\",fill_var = \"Treatment\",colors = example_colors) 12.1.3 Advanced Example BetterVis_LinePlot_Chart ( df = BetterVis_LinePlot_Chart_example, x_var = \"Time\", y_var = \"value\", fill_var = \"Treatment\", colors = example_colors, confidence = T, x_title = \"Time\",y_title = \"Value\", legend_title = \"\",legend_position = \"top\", size_global_adjust = 1, facet = T,facet_var = \"Group\",facet_background_color = \"grey\",facet_background_border=FALSE )+theme()+guides() BetterVis_LinePlot_Chart ( df = BetterVis_LinePlot_Chart_example, x_var = \"Time\", y_var = \"value\", fill_var = \"Treatment\", colors = example_colors, confidence = T, x_title = \"Time\",y_title = \"Value\", legend_title = \"\",legend_position = \"top\", size_global_adjust = 1, facet = T,facet_var = \"Group\",facet_background_color = \"grey\",facet_background_border=FALSE )+theme()+guides() 12.1.4 Parameter explanation df: The input data frame for plotting. x_var: The name of the variable for the x-axis. y_var: The name of the variable for the y-axis. fill_var: The name of the variable to use for the fill color. colors: A vector of colors to use for the fills. confidence: A logical value (TRUE/FALSE) indicating whether to add a confidence interval to the line plot. x_title: The title for the x-axis. y_title: The title for the y-axis. legend_title: The title for the legend. legend_position: The position of the legend (e.g., \"right\", \"bottom\"). size_global_adjust: A global size adjustment factor for all text elements. Values greater than 1 will enlarge text, and values less than 1 will shrink it. facet: A logical value (TRUE/FALSE) indicating whether to use faceting. facet_var: The variable to use for faceting. facet_background_color: The background color for the facet titles (strip background). facet_background_border: A logical value (TRUE/FALSE) indicating whether to add a black border to the facet titles. Copyright (c) 2025 zyt all right reserved，powered by GitbookLast revised on： 2025-08-04 18:28:30 "},"Chapter13 Pie Plot.html":{"url":"Chapter13 Pie Plot.html","title":"Chapter 13: Pie Plot","keywords":"","body":"Chapter 13 Pie Plot At the Beginning BetterVis package must be loaded beforehand. library(BetterVis) 13.1 BetterVis_Pie_Single Draw a good-looking pie chart in the fastest way 13.1.1 Data Input data(\"BetterVis_Pie_Single_example\",package=\"BetterVis\") 13.1.2 Usage Example1 BetterVis_Pie_Single(df = BetterVis_Pie_Single_example,ID_var = \"Cancer\",Proportion_var = \"Percent\", colors = col,label = T,size_adjust = 1)+theme()+guides() 13.1.4 Parameter explanation df: The input data frame for plotting. ID_var: The name of the column containing the individual categories for the pie chart slices. Proportion_var: The name of the column containing the proportion or value for each category. colors: A vector of colors for the pie chart slices. label: A logical value (TRUE/FALSE) indicating whether to display the labels from ID_var on the pie chart. size_adjust: A global size adjustment factor for all text elements. Values greater than 1 will enlarge text, and values less than 1 will shrink it. 13.2 BetterVis_Pie_Multi The BetterVis_Pie_Multi function is designed to create faceted pie charts, which is an ideal method for comparing proportional relationships across different groups or variables. 13.2.1 Data Input df_inner 13.2.2 Usage Example BetterVis_Pie_Multi_FIXED( data_in = df_inner, data_out = df_outer, facet_var = \"Pie_Label\", x_var = \"Treatment\", y_var = \"Patient_Stage\", fill_var1 = \"Microbe_Phylum\", pie_var1 = \"Abundance\", fill_var2 = \"Outcome\", pie_var2 = \"Proportion\", in_color = color_inner, out_color = color_outer, draw_outer_pie = T ) 13.2.3 Parameter explanation data_in: The data frame for the inner ring of the pie chart. data_out: The data frame for the outer ring of the pie chart. facet_var: The name of the variable to use for faceting. x_var: The name of the variable for the x-axis. y_var: The name of the variable for the y-axis. fill_var1: The categorical variable used to determine the fill colors for the inner ring. pie_var1: The variable that defines the proportions (values) for the inner ring's slices. fill_var2: The categorical variable used to determine the fill colors for the outer ring. pie_var2: The variable that defines the proportions (values) for the outer ring's slices. in_color: A vector of colors for the inner ring. out_color: A vector of colors for the outer ring. draw_outer_pie: A logical value (TRUE/FALSE) indicating whether to display the outer ring. 13.2.4 Important Note Specification of the data_out, pie_var2, and fill_var2 parameters is optional. In their absence, the function will render a visualization consisting of a single concentric ring. The data input requirements for this plot are stringent. The dataset must be well-structured, containing pre-calculated proportional values for each of the corresponding categorical variables. . Copyright (c) 2025 zyt all right reserved，powered by GitbookLast revised on： 2025-08-04 18:41:14 "}}